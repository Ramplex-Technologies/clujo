{"version":3,"sources":["../src/cron.types.ts"],"sourcesContent":["export interface ICron {\n  /**\n   * Starts the cron job with the specified handler.\n   * @param handler A function to be executed when the cron job triggers.\n   * @throws {Error} If attempting to start a job that has already been started.\n   */\n  start(handler: () => Promise<void> | void): void;\n  /**\n   * Stops the cron job. If the job is currently running, it will wait for the job to finish before stopping it.\n   * This can be safely invoked even if the job hasn't been started.\n   *\n   * @param timeout The maximum time (in ms) to wait for the job to finish before stopping it forcefully.\n   * @returns A promise that resolves when the job has been stopped\n   */\n  stop(timeout: number): Promise<void>;\n}\n"],"mappings":";;;;;;;;;;;;;;;;AAAA;AAAA;","names":[]}