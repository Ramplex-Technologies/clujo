{"version":3,"sources":["../src/context.ts"],"sourcesContent":["/**\n * Used to allow for the sharing of state between tasks.\n */\nexport class Context<T extends object> {\n  private object!: { initial: object | undefined } & T;\n  private updateQueue: Promise<void>;\n\n  constructor(initialObject?: object) {\n    this.reset(initialObject);\n    this.updateQueue = Promise.resolve();\n  }\n\n  /**\n   * Gets the current state of the managed object.\n   */\n  public get value(): { initial: object | undefined } & T {\n    return this.object;\n  }\n\n  /**\n   * Resets the context to its initial state or a new initial object.\n   */\n  public reset(initialObject?: object): void {\n    if (initialObject) {\n      this.object = { initial: { ...initialObject } } as {\n        initial: object | undefined;\n      } & T;\n    } else {\n      this.object = { initial: undefined } as {\n        initial: object | undefined;\n      } & T;\n    }\n  }\n\n  /**\n   * Asynchronously updates the context with new values. Ensures that updates are applied in the order they are called.\n   */\n  public update<NewValue extends object>(updateValue: NewValue): Promise<void> {\n    this.updateQueue = this.updateQueue.then(() => {\n      // overrides won't happen with how this is used since\n      // the initial context is under the key \"initial\"\n      // and all task results are under the unique id of that task\n      this.object = { ...this.object, ...updateValue };\n      return Promise.resolve();\n    });\n    return this.updateQueue;\n  }\n}\n"],"mappings":";AAGO,IAAM,UAAN,MAAgC;AAAA,EAIrC,YAAY,eAAwB;AAClC,SAAK,MAAM,aAAa;AACxB,SAAK,cAAc,QAAQ,QAAQ;AAAA,EACrC;AAAA;AAAA;AAAA;AAAA,EAKA,IAAW,QAA6C;AACtD,WAAO,KAAK;AAAA,EACd;AAAA;AAAA;AAAA;AAAA,EAKO,MAAM,eAA8B;AACzC,QAAI,eAAe;AACjB,WAAK,SAAS,EAAE,SAAS,EAAE,GAAG,cAAc,EAAE;AAAA,IAGhD,OAAO;AACL,WAAK,SAAS,EAAE,SAAS,OAAU;AAAA,IAGrC;AAAA,EACF;AAAA;AAAA;AAAA;AAAA,EAKO,OAAgC,aAAsC;AAC3E,SAAK,cAAc,KAAK,YAAY,KAAK,MAAM;AAI7C,WAAK,SAAS,EAAE,GAAG,KAAK,QAAQ,GAAG,YAAY;AAC/C,aAAO,QAAQ,QAAQ;AAAA,IACzB,CAAC;AACD,WAAO,KAAK;AAAA,EACd;AACF;","names":[]}